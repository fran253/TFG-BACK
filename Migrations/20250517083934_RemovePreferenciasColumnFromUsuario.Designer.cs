// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TFG_BACK.Migrations
{
    [DbContext(typeof(AcademIQDbContext))]
    [Migration("20250517083934_RemovePreferenciasColumnFromUsuario")]
    partial class RemovePreferenciasColumnFromUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Asignatura", b =>
                {
                    b.Property<int>("IdAsignatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAsignatura"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdAsignatura");

                    b.HasIndex("IdCurso");

                    b.ToTable("Asignatura", (string)null);
                });

            modelBuilder.Entity("ComentarioVideo", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdComentario"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdVideo")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdComentario");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdVideo");

                    b.ToTable("ComentarioVideo", (string)null);
                });

            modelBuilder.Entity("Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCurso");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("DetalleQuiz", b =>
                {
                    b.Property<int>("IdDetalleQuiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleQuiz"));

                    b.Property<int>("IdQuiz")
                        .HasColumnType("int");

                    b.Property<string>("Opciones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdDetalleQuiz");

                    b.HasIndex("IdQuiz");

                    b.ToTable("DetalleQuiz", (string)null);
                });

            modelBuilder.Entity("Favorito", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdVideo")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdUsuario", "IdVideo");

                    b.HasIndex("IdVideo");

                    b.ToTable("Favorito", (string)null);
                });

            modelBuilder.Entity("MarcadorVideo", b =>
                {
                    b.Property<int>("IdMarcador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMarcador"));

                    b.Property<int>("IdVideo")
                        .HasColumnType("int");

                    b.Property<decimal>("MinutoImportante")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("IdMarcador");

                    b.HasIndex("IdVideo");

                    b.ToTable("MarcadorVideo", (string)null);
                });

            modelBuilder.Entity("Preferencias", b =>
                {
                    b.Property<int>("IdPreferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPreferencia"));

                    b.Property<string>("ColorBordes")
                        .HasColumnType("longtext");

                    b.Property<string>("ColorFondo")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagenFondo")
                        .HasColumnType("longtext");

                    b.HasKey("IdPreferencia");

                    b.ToTable("Preferencias", (string)null);
                });

            modelBuilder.Entity("Quiz", b =>
                {
                    b.Property<int>("IdQuiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdQuiz"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int");

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdQuiz");

                    b.HasIndex("IdAsignatura");

                    b.HasIndex("IdCurso");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("ResultadoQuiz", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdQuiz")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("Puntuacion")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdResultado");

                    b.HasIndex("IdQuiz");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ResultadoQuiz", (string)null);
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Seguimiento", b =>
                {
                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesor")
                        .HasColumnType("int");

                    b.HasKey("IdAlumno", "IdProfesor");

                    b.HasIndex("IdProfesor");

                    b.ToTable("Seguimiento", (string)null);
                });

            modelBuilder.Entity("TuProyecto.Models.ReporteVideo", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdReporte"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdVideo")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("VideoIdVideo")
                        .HasColumnType("int");

                    b.HasKey("IdReporte");

                    b.HasIndex("UsuarioIdUsuario");

                    b.HasIndex("VideoIdVideo");

                    b.ToTable("ReportesVideo");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PreferenciasIdPreferencia")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.HasIndex("PreferenciasIdPreferencia");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("UsuarioAsignatura", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdUsuario", "IdAsignatura");

                    b.HasIndex("IdAsignatura");

                    b.ToTable("Usuario_Asignatura", (string)null);
                });

            modelBuilder.Entity("UsuarioCurso", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdUsuario", "IdCurso");

                    b.HasIndex("IdCurso");

                    b.ToTable("Usuario_Curso", (string)null);
                });

            modelBuilder.Entity("Video", b =>
                {
                    b.Property<int>("IdVideo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdVideo"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Duracion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int");

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Miniatura")
                        .HasColumnType("longtext");

                    b.Property<int>("NumReportes")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdVideo");

                    b.HasIndex("IdAsignatura");

                    b.HasIndex("IdCurso");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Video", (string)null);
                });

            modelBuilder.Entity("Asignatura", b =>
                {
                    b.HasOne("Curso", "Curso")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("ComentarioVideo", b =>
                {
                    b.HasOne("Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Video", "Video")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdVideo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("DetalleQuiz", b =>
                {
                    b.HasOne("Quiz", "Quiz")
                        .WithMany("Detalles")
                        .HasForeignKey("IdQuiz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Favorito", b =>
                {
                    b.HasOne("Usuario", "Usuario")
                        .WithMany("Favoritos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Video", "Video")
                        .WithMany("Favoritos")
                        .HasForeignKey("IdVideo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("MarcadorVideo", b =>
                {
                    b.HasOne("Video", "Video")
                        .WithMany("Marcadores")
                        .HasForeignKey("IdVideo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Quiz", b =>
                {
                    b.HasOne("Asignatura", "Asignatura")
                        .WithMany("Quizzes")
                        .HasForeignKey("IdAsignatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("IdCurso");

                    b.HasOne("Usuario", "Usuario")
                        .WithMany("Quizzes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignatura");

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ResultadoQuiz", b =>
                {
                    b.HasOne("Quiz", "Quiz")
                        .WithMany("Resultados")
                        .HasForeignKey("IdQuiz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Usuario")
                        .WithMany("Resultados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Seguimiento", b =>
                {
                    b.HasOne("Usuario", "Alumno")
                        .WithMany("Seguidores")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Usuario", "Profesor")
                        .WithMany("Seguidos")
                        .HasForeignKey("IdProfesor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("TuProyecto.Models.ReporteVideo", b =>
                {
                    b.HasOne("Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");

                    b.HasOne("Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoIdVideo");

                    b.Navigation("Usuario");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.HasOne("Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Preferencias", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("PreferenciasIdPreferencia");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("UsuarioAsignatura", b =>
                {
                    b.HasOne("Asignatura", "Asignatura")
                        .WithMany("UsuarioAsignaturas")
                        .HasForeignKey("IdAsignatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Usuario")
                        .WithMany("UsuarioAsignaturas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignatura");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UsuarioCurso", b =>
                {
                    b.HasOne("Curso", "Curso")
                        .WithMany("UsuarioCursos")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Usuario")
                        .WithMany("UsuarioCursos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Video", b =>
                {
                    b.HasOne("Asignatura", "Asignatura")
                        .WithMany("Videos")
                        .HasForeignKey("IdAsignatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("IdCurso");

                    b.HasOne("Usuario", "Usuario")
                        .WithMany("Videos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignatura");

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Asignatura", b =>
                {
                    b.Navigation("Quizzes");

                    b.Navigation("UsuarioAsignaturas");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("Curso", b =>
                {
                    b.Navigation("Asignaturas");

                    b.Navigation("UsuarioCursos");
                });

            modelBuilder.Entity("Preferencias", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Quiz", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Favoritos");

                    b.Navigation("Quizzes");

                    b.Navigation("Resultados");

                    b.Navigation("Seguidores");

                    b.Navigation("Seguidos");

                    b.Navigation("UsuarioAsignaturas");

                    b.Navigation("UsuarioCursos");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("Video", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Favoritos");

                    b.Navigation("Marcadores");
                });
#pragma warning restore 612, 618
        }
    }
}
